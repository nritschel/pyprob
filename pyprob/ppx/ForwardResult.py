# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ppx

import flatbuffers

class ForwardResult(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsForwardResult(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ForwardResult()
        x.Init(buf, n + offset)
        return x

    # ForwardResult
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ForwardResult
    def Output(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .Tensor import Tensor
            obj = Tensor()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ForwardResultStart(builder): builder.StartObject(1)
def ForwardResultAddOutput(builder, output): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(output), 0)
def ForwardResultEnd(builder): return builder.EndObject()
